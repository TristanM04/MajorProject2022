<Window x:Class="MajorProject2022.TestHomePage"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
         xmlns:local="clr-namespace:MajorProject2022" xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        mc:Ignorable="d"
        Title="TestHomePage" Height="720" Width="1280" WindowStyle="none"
        MouseDown="Window_MouseDown" WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize" AllowsTransparency="True" Background="Transparent">



    <Window.Resources>
        <!--List view Style-->

        <Style TargetType="ListView">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontFamily" Value="Helvetica"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="0.5"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>


        </Style>

        <Style x:Key="GridViewColumnHeaderStyle1" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">

                        <Border BorderThickness="0,0,0,1" BorderBrush="White" Background="Transparent">
                            <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Center" />
                        </Border>
                    </ControlTemplate>

                </Setter.Value>

            </Setter>

            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontFamily" Value="Helvetica" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="Light" />

        </Style>



        <!--#region Button Visual Style-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <!--#endregion-->

        <!--#region Home Button Style-->
        <Style x:Key="HomeBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Profile Button Style-->
        <Style x:Key="ProfileBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Settings Button Style-->
        <Style x:Key="SettingsBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Close Button Style-->
        <Style x:Key="CloseBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

    </Window.Resources>

    <Border CornerRadius="20">
        <Border.Background>
            <LinearGradientBrush>
                <GradientStop Color="DarkBlue" Offset="0.0"/>
                <GradientStop Color="#010917" Offset="1"/>

            </LinearGradientBrush>
        </Border.Background>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="auto" MinHeight="73.2"/>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Border Grid.RowSpan="3" CornerRadius="20,0,0,20" Background="#0c0838">
                <Grid>
                    <StackPanel VerticalAlignment="Top">
                        <StackPanel>
                            <Button x:Name="Workout"
                        Height="100"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        Margin="0,180,0,20" 
                        Style="{DynamicResource HomeBtnStyle}" 
                        MouseEnter="Workout_MouseEnter" 
                        MouseLeave="Workout_MouseLeave">

                                <!--Button Icon-->
                                <iconPacks:PackIconMaterial Kind="Dumbbell"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Foreground="White" 
                                            Height="40"
                                            Width="40"/>
                            </Button>
                            <Border CornerRadius="20"/>

                            <Button x:Name="Chat"
                        Height="100"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        Margin="0,0,0,10" 
                        Style="{DynamicResource ProfileBtnStyle}" 
                        MouseEnter="Chat_MouseEnter" 
                        MouseLeave="Chat_MouseLeave">

                                <!--Button Icon-->
                                <iconPacks:PackIconMaterial Kind="Chat"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Foreground="White" 
                                            Height="40" 
                                            Width="40"/>

                            </Button>

                            <Button x:Name="Settings"
                        Height="100"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        Margin="0,10,0,0" 
                        Style="{DynamicResource SettingsBtnStyle}" 
                        MouseEnter="Settings_MouseEnter" 
                        MouseLeave="Settings_MouseLeave"
                        Click="Settings_Click">

                                <!--Button Icon-->
                                <iconPacks:PackIconMaterial Kind="Cog"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Foreground="White"
                                            Height="40" 
                                            Width="40"/>
                            </Button>

                        </StackPanel>

                    </StackPanel>
                </Grid>
            </Border>



            <Grid Grid.Column="1" Margin="100,30,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.ColumnSpan="2" Margin="0,0,-1050,0">
                    <TextBlock VerticalAlignment="Center" 
                               Foreground="White" 
                               Margin="62,0,30,0"
                               Text="Add Workout"
                               Panel.ZIndex="1"
                               FontFamily="Helvetica"
                               FontWeight="ExtraBold"
                               FontSize="36"
                               Visibility="Visible"
                               IsHitTestVisible="False"/>



                    <Button x:Name="Exit"
                        Height="40"
                        Width="40"
                        Background="Transparent"
                        BorderThickness="0"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right"
                        Margin="0,0,0,0" 
                        Style="{DynamicResource CloseBtnStyle}" 
                        Click="Exit_Click">

                        <!--add image-->
                        <iconPacks:PackIconMaterial Kind="Close"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Foreground="White"/>

                    </Button>


                </Grid>



            </Grid>

            <Grid Grid.Column="1" Margin="0,73,-474,0" Grid.RowSpan="3">
                <StackPanel IsEnabled="True" Margin="30" HorizontalAlignment="Center">
                    <!--This is the Add workouts box-->

                    <StackPanel Orientation="Horizontal" Margin="0,0,70,0">
                        <TextBox x:Name="TitleBox" FontFamily="Helvetica"
                         FontWeight="Light"
                         Text="Title"   
                         GotKeyboardFocus="TitleBox_GotKeyboardFocus"
                         FontSize="30"
                         HorizontalAlignment="Center"
                         Foreground="White"
                         Background="Transparent"
                         BorderThickness="0"
                         Width="235"
                         HorizontalContentAlignment="Left"
                         Opacity="0.4"
                         Height="35"
                         Margin="100,50,0,0"/>
                        <iconPacks:PackIconMaterial Kind="FormatTitle"
                                            VerticalAlignment="Bottom"
                                            HorizontalAlignment="Center"
                                            Margin="0,20,35,3"
                                            Foreground="White"/>

                    </StackPanel>
                    <Border Width="250"
                        Height="2"
                        Background="White"
                        Opacity="1.0"/>

                    <StackPanel Orientation="Horizontal" Margin="0,100,0,0">
                        <TextBox x:Name="DescriptionBox" FontFamily="Helvetica"
                         FontWeight="Light"
                         Text="Description"
                         GotKeyboardFocus="DescriptionBox_GotKeyboardFocus"
                         FontSize="30"
                         HorizontalAlignment="Center"
                         Foreground="White"
                         Background="Transparent"
                         BorderThickness="0"
                         Width="235"
                         HorizontalContentAlignment="Left"
                         Opacity="0.4"
                         Height="35"
                         Margin="100,0,0,0"/>
                        <iconPacks:PackIconMaterial Kind="Information"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Foreground="White"/>

                    </StackPanel>
                    <Border Width="250"
                        Height="2"
                        Background="White"
                        Opacity="1.0"/>

                    <StackPanel Orientation="Horizontal" Margin="0,100,0,0">
                        <TextBox x:Name="DurationBox" FontFamily="Helvetica"
                         FontWeight="Light"
                         Text="Duration(min)"
                         GotKeyboardFocus="DurationBox_GotKeyboardFocus"
                         FontSize="30"
                         HorizontalAlignment="Center"
                         Foreground="White"
                         Background="Transparent"
                         BorderThickness="0"
                         Width="235"
                         HorizontalContentAlignment="Left"
                         Opacity="0.4"
                         Height="35"
                         Margin="100,0,0,0"/>


                        <iconPacks:PackIconMaterial Kind="TimerSand"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Foreground="White"/>
                    </StackPanel>
                    <Border Width="250"
                        Height="2"
                        Background="White"
                        Opacity="1.0"/>

                    <Button x:Name="AddWorkOutBtn"
                            Width="250" 
                            Height="60" 
                            Content="Add Workout"
                            FontSize="20"
                            Margin="60,80,60,0" 
                            Click="AddWorkOutBtn_Click"
                            />
                </StackPanel>

            </Grid>

            <Grid Grid.Column="1" Grid.Row="2" Margin="0,0,-1600,0" Width="600">
                <ListView Name="ItemList" Margin="0,10,0,60">
                    <ListView.View>
                        <GridView ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle1}" >
                            <GridViewColumn Header="Title" Width="125" DisplayMemberBinding="{Binding Title}"/>
                            <GridViewColumn Header="Description" Width="320" DisplayMemberBinding="{Binding Description}"/>
                            <GridViewColumn Header="Duration" Width="70" DisplayMemberBinding="{Binding Duration}"/>
                            <GridViewColumn Header="Date" Width="80" DisplayMemberBinding="{Binding Date}"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </Grid>

            <Grid Grid.Column="1" Grid.Row="2" Margin="0,590,-1300,0" Width="300" Height="70">
                <StackPanel Grid.Row="1">
                    <TextBlock Text="{Binding Path=finalValue, UpdateSourceTrigger=PropertyChanged}" 
                               Foreground="White"
                               Background="Transparent"
                               FontFamily="Helvetica"
                               FontSize="20"
                               FontWeight="Light"
                               Name="Totaltext"/>
                </StackPanel>
            </Grid>
        </Grid>

    </Border>

</Window>
